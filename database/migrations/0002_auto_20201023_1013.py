# Generated by Django 3.1.2 on 2020-10-23 10:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('database', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('definition', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('status', models.CharField(max_length=200)),
                ('organisation', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Caracteristics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('length', models.FloatField()),
                ('width', models.FloatField()),
                ('height', models.FloatField()),
                ('weight', models.FloatField()),
                ('surface', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='CollectiveActor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('definition', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_content', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Date',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('duration_date', models.DurationField()),
            ],
        ),
        migrations.CreateModel(
            name='DetailCaracteristics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detailCaracteristicsObject', models.CharField(choices=[('DETAIL1', 'Detail1')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Energy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('energy', models.CharField(choices=[('ELECTRICITY', 'Electricity')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Knowledge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('definition', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=500)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Place_Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_number', models.IntegerField()),
                ('street_type', models.CharField(max_length=3)),
                ('street_name', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=100)),
                ('post_code', models.IntegerField()),
                ('country', models.CharField(max_length=100)),
                ('lieu_dit', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Place_Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place_type', models.CharField(choices=[('BUILDING', 'Building')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Quality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('definition', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('socialLink', models.CharField(choices=[('FATHER', 'Father'), ('MOTHER', 'Mother')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Type_Object',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_object', models.CharField(choices=[('TOOL', 'Tool')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Types',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('types_source', models.CharField(choices=[('SCAN', 'Scan'), ('3D MODEL', 'Ddd Models')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Url',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
            ],
        ),
        migrations.RemoveField(
            model_name='actor',
            name='name',
        ),
        migrations.CreateModel(
            name='Social',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('definition', models.CharField(max_length=500)),
                ('place', models.ManyToManyField(to='database.Place')),
                ('source', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.source')),
            ],
        ),
        migrations.AddField(
            model_name='place',
            name='place_location',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.place_location'),
        ),
        migrations.AddField(
            model_name='place',
            name='place_type',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.place_type'),
        ),
        migrations.AddField(
            model_name='place',
            name='source',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.source'),
        ),
        migrations.CreateModel(
            name='Object',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('definition', models.CharField(max_length=200)),
                ('content', models.CharField(max_length=200)),
                ('abstract_object', models.ManyToManyField(to='database.AbstractObject')),
                ('actor', models.ManyToManyField(to='database.Actor')),
                ('caracteristics', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.caracteristics')),
                ('collectiveActors', models.ManyToManyField(to='database.CollectiveActor')),
                ('energy', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.energy')),
                ('place', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.place')),
                ('source', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.source')),
                ('type_object', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.type_object')),
            ],
        ),
        migrations.CreateModel(
            name='name_actor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('actor', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.actor')),
            ],
        ),
        migrations.AddField(
            model_name='collectiveactor',
            name='date',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.date'),
        ),
        migrations.AddField(
            model_name='collectiveactor',
            name='knowledge',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.knowledge'),
        ),
        migrations.AddField(
            model_name='collectiveactor',
            name='place',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.place'),
        ),
        migrations.AddField(
            model_name='collectiveactor',
            name='quality',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.quality'),
        ),
        migrations.AddField(
            model_name='collectiveactor',
            name='source',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.source'),
        ),
        migrations.AddField(
            model_name='caracteristics',
            name='detail_caracteristics',
            field=models.ForeignKey(default=None, on_delete=models.Model, to='database.detailcaracteristics'),
        ),
        migrations.AddField(
            model_name='abstractobject',
            name='collectiveActor',
            field=models.ManyToManyField(to='database.CollectiveActor'),
        ),
        migrations.AddField(
            model_name='abstractobject',
            name='date',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.date'),
        ),
        migrations.AddField(
            model_name='abstractobject',
            name='knowledge',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.knowledge'),
        ),
        migrations.AddField(
            model_name='abstractobject',
            name='place',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.place'),
        ),
        migrations.AddField(
            model_name='abstractobject',
            name='quality',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.quality'),
        ),
        migrations.AddField(
            model_name='abstractobject',
            name='source',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.source'),
        ),
        migrations.AddField(
            model_name='actor',
            name='collectiveActors',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.collectiveactor'),
        ),
        migrations.AddField(
            model_name='actor',
            name='place',
            field=models.ManyToManyField(to='database.Place'),
        ),
        migrations.AddField(
            model_name='actor',
            name='quality',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.quality'),
        ),
        migrations.AddField(
            model_name='actor',
            name='social',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.social'),
        ),
        migrations.AddField(
            model_name='actor',
            name='socialLink',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.sociallink'),
        ),
        migrations.AddField(
            model_name='profession',
            name='abstractobjects',
            field=models.ManyToManyField(to='database.AbstractObject'),
        ),
        migrations.AddField(
            model_name='profession',
            name='place',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.place'),
        ),
        migrations.AddField(
            model_name='source',
            name='author',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.author'),
        ),
        migrations.AddField(
            model_name='source',
            name='content',
            field=models.ManyToManyField(to='database.Content'),
        ),
        migrations.AddField(
            model_name='source',
            name='date',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.date'),
        ),
        migrations.AddField(
            model_name='source',
            name='types',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='database.types'),
        ),
        migrations.AddField(
            model_name='source',
            name='url',
            field=models.ManyToManyField(to='database.Url'),
        ),
    ]
