@startuml model_overview

class Date {
    name: char
    day: int
    month: int
    year: int
    date: date
    complement: char
    duration_date: duration
    validated: bool

    __str__()
}

class Quality {
    name: char
    definition: char
    validated: char
    
    __str__()
}

class Author {
    name: char
    lastName: char
    status: char
    organisation: char

    __str__()
}

class Content {
    sourceContent: char

    __str__()
}

class Files {
    name: char
    definition: char
    file_type: char
    file_extension: char
    url: fileField

    __str__()
}

enum FileType {
    Audio: Audio
    Video: Video
    Cao: Cao
    Image: Image
    Document: Document
}


class Source {
    name: char
    date_source: foreignKey
    conservation_place: char
    cote: char
    author: foreignKey
    editor: foreignKey
    rights: char
    url: manyToMany

    registration: char
    original_registration: char
    viability: int
    content: manyToMany
    
    state: char
    study: char
    validated: bool
    

    __str__()
}

enum Rank {
    NotReliable : 0
    Reliable : 1
}

class PlaceLocation {
    street_number: int
    street_type: char
    street_name: char
    borough: int
    post_code: int
    city: char
    country: char
    place_said: char
    validated: bool

    __str__()
}

class PlaceType {
    placeType: char
    validated: bool

    __str__()
}

class Place {
    name: char
    description: char
    place_location:foreignKey
    longitude: float
    latitude: float
    place_type: manyToMany
    source: manyToMany
    validated: bool

    __str__()
}

class Knowledge {
    name: char
    definition: char
    validated: bool

    __str__()
}

class CollectiveActor {
    name: char
    definition: char
    date: manyToMany
    quality: manyToMany
    knowledge: manyToMany
    place: manyToMany
    source: manyToMany
    abstract_object: manyToMany
    validated: bool

    __str__()
}

class AbstractObject {
    name: char
    definition: char
    date: manyToMany
    quality: manyToMany
    collectiveActor: manyToMany
    knowledge: manyToMany
    ab_objects: manyToMany
    place: manyToMany
    source: manyToMany
    validated: bool

    __str__()
}

class Profession {
    name: char
    definition: char
    autonomous: bool
    abstractObject: manyToMany
    place: foreignKey
    source: manyToMany
    validated: bool

    __str__()
}

class SocialActivity{
    name: char
    definition: char
    place: manyToMany
    source: manyToMany
    validated: bool

    __str__()
}

class SocialLink {
    link: char
    actor_link: foreignKey
    source: manyToMany
    validated: bool
}

enum SocialLinkType{
    Father
    Mother
    Sister
    Brother
    Friend
    Coworker
}

class RelationLink {
    link: char
    object_id: foreignKey
    source: manyToMany
    validated: bool
}

enum RelationLinkType{
    OLD
    MADEBY
    USE
    CREATE
}

class Actor {
    father: manyToMany

    categorie: char
    domain: char
    building: char
    name: char
    last_name: char
    profession: manyToMany
    instruction_level: char

    birth_date: foreignKey
    birth_place: foreignKey


    gender: char
    arrival_date: foreignKey
    departure_date: foreignKey
    nationality: char
    living_place: foreignKey

    home_status: char
    home_size: int
    wedding_date: foreignKey
    wedding_place: foreignKey
    wedding_name: char
    wedding_lastName: char
    death_date: foreignKey
    death_place: foreignKey

    commentary: char

    socialActivities: manyToMany
    collectiveActor: manyToMany
    quality: manyToMany
    socialLink: manyToMany
    knowledge: manyToMany

    source: manyToMany
    validated: bool

    __str__()
}

enum Gender {
    Male
    Female
    Other
}

enum LevelOfInstruction {
    zero
    one
    two
    three
    four
    five
    X
}


class NameActor {
    actors: foreignKey
    name: char
    last_name: char
    typeOfActor: char
    validated: bool
    
    __str__()
}

class DetailCaracteristic {
    detailCaracteristic: char

    __str__()
}

class TypeObject {
    typeObject: char

    __str__()
}

class Energy {
    energy: char

    __str__()
}

class Object {
    father: manyToMany

    name: char
    categorie: char
    domain: char
    lower_categorie: char
    description: char
    abstract_object: manyToMany

    fk_typologie: foreignKey
    period: char
    date: manyToMany
    place:manyToMany
    type_object: foreignKey
    collective_actors: manyToMany
    actor: manyToMany

    energy: foreignKey
    
    source: manyToMany
    content: char
    validated: bool

    __str__()
}

class Ressource {
    name: char
    description: char
    field: char
    object_son: manyToMany
    actor_son: manyToMany
}

enum RessourcesField {
    Architecture
    Production
    Hommes
    Urbanisme
}

class Typologie {
    plan: char
    wall: char
    roof: char
    floor: int
    surface: float
    light: char
    materials: char

}

class Caracteristic {
    objectCaracteristic: foreignKey
    lenght: float
    width: float
    height: float
    weight: float
    surface: float
    detail_caracteristics: manyToMany

    __str__()
}

class ModifyAttribute {
    table: char
    field_value: char
    instance_value: int
    content: float
    
    __str__()
}

enum Table {
    Date
    Quality
    Author
    Content
    Files
    Source
    PlaceLocation
    PlaceType
    Place
    Knowledge
    CollectiveActor
    AbstractObject
    Profession
    SocialActivity
    SocialLink
    RelationLink
    Actor
    NameActor
    DetailCaracteristic
    TypeObject
    Energy
    Object
    Typologie
    Caracteristic
    Ressource
}

Source <-- Author
Source <-- Content

Table --> ModifyAttribute

FileType --> Files
Files --> Source
Rank --> Source

Date --> Source

Place <-- PlaceType
Place <-- PlaceLocation
Place <-- Source

CollectiveActor <-- Date
CollectiveActor <-- Quality
CollectiveActor <-- Knowledge
CollectiveActor <-- Source
CollectiveActor <-- Place

AbstractObject <-- Date
AbstractObject <-- Quality
AbstractObject <-- Knowledge
AbstractObject <-- CollectiveActor
AbstractObject <-- Place
AbstractObject <-- Source

Profession <-- Place
Profession <-- Source

SocialActivity <-- Place
SocialActivity <-- Source

SocialLink --> Actor
SocialLinkType --> SocialLink

Actor <-- Ressource
Actor <-- Profession
Actor <-- SocialActivity
Actor <-- CollectiveActor
Actor <-- Quality
Actor <-- SocialLink
Actor <-- Place
Actor <-- LevelOfInstruction
Actor <-- Gender
Actor <-- Source


RelationLink <-- RelationLinkType
Ressource <-- RessourcesField
Object <-- Ressource
Actor <-- Ressource

NameActor --> Actor

Object <-- Ressource
Object <-- TypeObject
Object <-- Energy
Object <-- CollectiveActor
Object <-- AbstractObject
Object <-- Actor
Object <-- Place
Object <-- Typologie
Object <-- Source

Caracteristic -- Object
Caracteristic -- DetailCaracteristic

@enduml